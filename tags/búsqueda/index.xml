<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>búsqueda on omegaUp blog</title><link>https://blogv2.omegaup.com/tags/b%C3%BAsqueda/</link><description>Recent content in búsqueda on omegaUp blog</description><generator>Hugo -- gohugo.io</generator><language>es-mx</language><lastBuildDate>Fri, 24 Jul 2015 07:07:00 +0000</lastBuildDate><atom:link href="https://blogv2.omegaup.com/tags/b%C3%BAsqueda/index.xml" rel="self" type="application/rss+xml"/><item><title>Solución a "Temblor"</title><link>https://blogv2.omegaup.com/solucion-a-temblor/</link><pubDate>Fri, 24 Jul 2015 07:07:00 +0000</pubDate><guid>https://blogv2.omegaup.com/solucion-a-temblor/</guid><description>Problema: Temblor
Primero que nada, tratemos de entender qué es lo que se nos pide, pues es un problema poco tradicional: Dado un mapa de a lo más 4x4, hay que dar una serie de instrucciones que, sin importar en donde te encuentres en el mapa, logre llevarte a una salida; esta secuencia además, debe de ser la más pequeña posible.
Este es el caso de ejemplo:
La solución correcta es ONNEE, pues con esas instrucciones, podemos salir no importando en que lugar estemos (el lugar inicial está marcado con un punto rojo):</description></item><item><title>Solución a "Poema Equino"</title><link>https://blogv2.omegaup.com/solucion-a-poema-equino/</link><pubDate>Sun, 27 Jul 2014 07:08:35 +0000</pubDate><guid>https://blogv2.omegaup.com/solucion-a-poema-equino/</guid><description>Concurso: Preselectivo para la IOI 2015, Etapa 1, Problemset 5 Autor: Freddy Román Cepeda Fuente: Edgar Augusto Santiago Nieves, Freddy Román Cepeda
Los límites de este problema permitían hacer una búsqueda sobre todos los estados posibles de los caballos sobre el teclado, ya que si el estado es $latex (\text{poema},\text{fila caballo}_1,\text{columna caballo}_1,\text{fila caballo}_2,\text{columna caballo}_2)$, solamente hay $latex 100 \times (4 \times 10)^2 = 160,000$ estados distintos.
Además, como el problema no pide la cantidad mínima de movimientos no hace falta hacer una BFS (búsqueda en amplitud), sino que una DFS (búsqueda en profundidad) utilizando el mismo stack del lenguaje es suficiente.</description></item></channel></rss>