<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Enrique Lira on omegaUp blog</title><link>/tags/enrique-lira/</link><description>Recent content in Enrique Lira on omegaUp blog</description><generator>Hugo -- gohugo.io</generator><language>es-mx</language><lastBuildDate>Tue, 08 Jan 2013 17:18:25 +0000</lastBuildDate><atom:link href="/tags/enrique-lira/index.xml" rel="self" type="application/rss+xml"/><item><title>Solución a "Cambio"</title><link>/solucion-a-cambio/</link><pubDate>Tue, 08 Jan 2013 17:18:25 +0000</pubDate><guid>/solucion-a-cambio/</guid><description>Concurso: Preselectivo para la IOI 2013, Etapa 1, Examen 7 **Autor: **Enrique Lira Vargas
Lo importante de este problema es notar como se puede usar un backtracking para contar cosas. En este caso lo que se debía contar era la cantidad de formas de llegar a una cantidad sumando una o más veces una serie de cantidades dadas.
Solución de 30, 50 puntos Generar todas las combinaciones que sumen la cantidad C pedida.</description></item><item><title>Solución a "Minecraft"</title><link>/solucion-a-minecraft/</link><pubDate>Tue, 08 Jan 2013 17:14:15 +0000</pubDate><guid>/solucion-a-minecraft/</guid><description>Concurso: Preselectivo para la IOI 2013, Etapa 1, Examen 5 **Autor: **Enrique Lira Vargas
Este problema no requiere ninguna observación específica y realmente lo único que hay que hacer es una búsqueda.
Para los primeros 50 puntos Este primer sub set de casos se puede resolver implementando una búsqueda en amplitud que nos dé el camino más corto entre dos puntos en un mapa con paredes.
Para los 75 puntos Para este punto se me ocurrió una solución factible para aquellos que no saben construir una cola de prioridad, correr una búsqueda en amplitud con dos colas cuidando elegir siempre la siguiente posición con una menor cantidad de movimientos de las dos colas.</description></item></channel></rss>